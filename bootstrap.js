(()=>{function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return}if(info.done){resolve(value);}else {Promise.resolve(value).then(_next,_throw);}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value);}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err);}_next(undefined);})}}_asyncToGenerator(function*(){var{externalStorageDirectory,cacheDirectory,requestPermissions,checkPermissions}=nativeModuleProxy.AliucordNative;try{var granted=yield checkPermissions();var constants=nativeModuleProxy.DialogManagerAndroid.getConstants();if(!granted){var dialogResult=yield new Promise((res,rej)=>{nativeModuleProxy.DialogManagerAndroid.showAlert({title:"Storage Permissions",message:"Aliucord needs access to your storage to load plugins and themes.",cancelable:true,buttonPositive:"Ok",buttonNegative:"Cancel"},rej,(action,key)=>{if(action===constants.buttonClicked&&key===constants.buttonPositive)res(true);else res(false);});});if(!(dialogResult&&(yield requestPermissions()))){nativeModuleProxy.DialogManagerAndroid.showAlert({title:"Storage Permissions",message:"Access to your storage is required for aliucord to load.",cancelable:true,buttonPositive:"Ok"},()=>null,()=>null);return}}var aliucordDir=`${externalStorageDirectory}/AliucordRN`;AliuFS.mkdir(aliucordDir);var externalBundlePath=`${aliucordDir}/Aliucord.js.bundle`;if(AliuFS.exists(externalBundlePath)){globalThis.aliucord=AliuHermes.run(externalBundlePath);return}var bundlePrefix="Aliucord.js.bundle.";var bundles=AliuFS.readdir(cacheDirectory).filter(f=>f.type=="file"&&f.name.startsWith(bundlePrefix)).map(f=>f.name);var bundleETags=bundles.map(b=>b.slice(bundlePrefix.length));var bundleResponse=yield fetch("https://raw.githubusercontent.com/Aliucord/AliucordRN/builds/Aliucord.js.bundle",{headers:{"If-None-Match":bundleETags.map(tag=>`"${tag}"`).join(", ")}});if(!bundleResponse.ok&&bundleResponse.status!==304){throw new Error(`Failed to fetch Aliucord bundle: ${bundleResponse.status} ${yield bundleResponse.text()}`)}var eTag=bundleResponse.headers.get("etag")?.replaceAll('"',"");var internalBundlePath=`${cacheDirectory}/Aliucord.js.bundle.${eTag}`;if(!eTag||eTag.includes(",")||eTag.startsWith("W/")||!bundleETags.includes(eTag)){throw new Error("Unknown ETag")}if(bundleResponse.status===200){bundles.forEach(b=>AliuFS.remove(`${cacheDirectory}/${b}`));AliuFS.writeFile(internalBundlePath,(yield bundleResponse.arrayBuffer()));}globalThis.aliucord=AliuHermes.run(internalBundlePath);}catch(error){nativeModuleProxy.DialogManagerAndroid.showAlert({title:"Error",message:"Something went wrong while loading aliucord, check logs for the specific error.",cancelable:true,buttonPositive:"Ok"},()=>null,()=>null);console.error(error.stack);}})();})();